# SPDX-FileCopyrightText: 2024-present Stuart Ellis <stuart@stuartellis.name>
#
# SPDX-License-Identifier: MIT
#
# Configuration for the Task runner
#
# See: https://taskfile.dev
#
# Required tools:
#
# - pre-commit: https://pre-commit.com
# - Trivy: https://aquasecurity.github.io/trivy
#
# The *setup* task installs:
#
#  - pip-tools: https://pip-tools.readthedocs.io
#
# Other expected dependencies in a Python virtual environment:
#
# - mkdocs: https://www.mkdocs.org/
# - mypy: https://www.mypy-lang.org
# - pytest: https://pytest.org
# - pytest-cov: https://pytest-cov.readthedocs.io
# - pytest-randomly: https://pypi.org/project/pytest-randomly/
# - setuptools-scm: https://setuptools-scm.readthedocs.io
#
# These dependencies must be installed from a requirements file.
#
# yamllint disable rule:line-length

version: "3"

silent: true

tasks:
  default:
    cmds:
      - task: list

  build:
    desc: Build artifacts
    cmds:
      - python3 -m piptools compile -o requirements-{{ OS }}-developer.txt -q --all-extras pyproject.toml
      - python3 -m piptools compile -o requirements-{{ OS }}.txt -q pyproject.toml

  clean:
    desc: Delete generated files for project
    cmds:
      - python3 -m ruff clean -q
      - for:
          [
            "__pycache__",
            ".coverage",
            ".mypy_cache",
            ".pytest_cache",
            "dist",
            "site",
            "tmp",
          ]
        cmd: rm -fr {{ .ITEM }}

  docs:
    desc: Run Website for project documentation
    cmds:
      - python3 -m mkdocs serve

  fmt:
    desc: Format code
    aliases: [format]
    cmds:
      - python3 -m ruff check --select I --fix -q
      - python3 -m ruff format -q

  lint:
    desc: Run all checks
    aliases: [check]
    cmds:
      - pre-commit run --all-files

  list:
    desc: List available tasks
    cmds:
      - task --list

  setup:
    desc: Set up environment for development
    aliases: [bootstrap]
    cmds:
      # Install pip-tools
      - python3 -m pip install -q --disable-pip-version-check --require-virtualenv '.[reqs-utilities]'
      # Install lint requirements
      - python3 -m pip install -q --disable-pip-version-check --require-virtualenv '.[lint]'
      # Install testing requirements
      - python3 -m pip install -q --disable-pip-version-check --require-virtualenv '.[testing]'
      # Install project in editable mode
      - python3 -m pip install -q --disable-pip-version-check --require-virtualenv -e .
      # Enable pre-commit
      - pre-commit install

  test:
    desc: Run tests
    cmds:
      - task: lint
      - python3 -m mypy . --exclude bin --ignore-missing-imports
      - python3 -m pytest

  upgrade:
    desc: Upgrade requirements files
    cmds:
      - python3 -m piptools compile -o requirements-{{ OS }}-developer.txt -q -U --all-extras pyproject.toml
      - python3 -m piptools compile -o requirements-{{ OS }}.txt -q -U pyproject.toml

  version:
    desc: Get current project version
    cmds:
      - "echo {{ .PROJECT_VERSION }}"
    vars:
      PROJECT_VERSION:
        sh: python3 -m setuptools_scm
